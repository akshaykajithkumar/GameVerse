definitions:
  models.AdminLogin:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    type: object
  models.ChangePassword:
    properties:
      old_password:
        type: string
      password:
        type: string
      re_password:
        type: string
    type: object
  models.EditUserProfileResponse:
    properties:
      bio:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  models.ForgotPasswordData:
    properties:
      code:
        type: string
      confirm_password:
        maxLength: 20
        minLength: 8
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
      phone:
        type: string
    required:
    - code
    - phone
    type: object
  models.OTPData:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  models.SetNewName:
    properties:
      current:
        type: string
      new:
        type: string
    type: object
  models.UserDetails:
    properties:
      confirmpassword:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.UserProfileResponse:
    properties:
      bio:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      url:
        type: string
      username:
        type: string
    type: object
  models.VerifyData:
    properties:
      code:
        type: string
      phone:
        type: string
    required:
    - code
    - phone
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact: {}
paths:
  /admin/adminlogin:
    post:
      consumes:
      - application/json
      description: Login handler for admins
      parameters:
      - description: Admin login details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin Login
      tags:
      - Admin
  /admin/category:
    get:
      consumes:
      - application/json
      description: Admin can view the list of  Categories
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: List Categories
      tags:
      - Admin
  /admin/category/add:
    post:
      consumes:
      - application/json
      description: Admin can add new categories for products
      parameters:
      - description: category
        in: query
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Add Category
      tags:
      - Admin
  /admin/category/delete:
    delete:
      consumes:
      - application/json
      description: Admin can delete a category
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Delete Category
      tags:
      - Admin
  /admin/category/update:
    patch:
      consumes:
      - application/json
      description: Admin can update name of a category into new name
      parameters:
      - description: set new name
        in: body
        name: set_new_name
        required: true
        schema:
          $ref: '#/definitions/models.SetNewName'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Update Category
      tags:
      - Admin
  /admin/reports:
    get:
      consumes:
      - application/json
      description: Get a paginated list of user reports
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Reports List
      tags:
      - Admin
  /admin/users/getusers:
    get:
      consumes:
      - application/json
      description: Retrieve users with pagination
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get Users
      tags:
      - Admin
  /admin/users/toggle-block:
    post:
      consumes:
      - application/json
      description: using this handler admins can block or unblock an user
      parameters:
      - description: user-id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Block or unblock User
      tags:
      - Admin
  /users/category:
    get:
      consumes:
      - application/json
      description: User can view the list of  Categories
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: List Categories
      tags:
      - User
  /users/change-password:
    patch:
      consumes:
      - application/json
      description: user can change their password
      parameters:
      - description: changepassword
        in: body
        name: changepassword
        required: true
        schema:
          $ref: '#/definitions/models.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Change Password
      tags:
      - User
  /users/forgotpassword:
    post:
      consumes:
      - application/json
      description: Forgot password functionality
      parameters:
      - description: Forgot password data
        in: body
        name: forgotPasswordData
        required: true
        schema:
          $ref: '#/definitions/models.ForgotPasswordData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Forgot Password
      tags:
      - User
  /users/login:
    post:
      consumes:
      - application/json
      description: user can log in by giving their details
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Login
      tags:
      - User
  /users/logout:
    post:
      consumes:
      - application/json
      description: Logout the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: User Logout
      tags:
      - User
  /users/profile:
    get:
      consumes:
      - application/json
      description: Get the user profile details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Get User Profile
      tags:
      - User
  /users/profile/EditProfile:
    patch:
      consumes:
      - multipart/form-data
      description: Edit the user profile including name, email, username, phone, bio,
        and profile picture
      parameters:
      - description: User Profile Request
        in: body
        name: userProfileRequest
        required: true
        schema:
          $ref: '#/definitions/models.EditUserProfileResponse'
      - description: Profile Picture
        in: formData
        name: ProfilePicture
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Edit User Profile
      tags:
      - User
  /users/reportUser:
    post:
      consumes:
      - application/json
      description: Submit a report for a user
      parameters:
      - description: ID of the user being reported
        in: query
        name: targetUserID
        required: true
        type: integer
      - description: Reason for the report
        in: query
        name: reason
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Report User
      tags:
      - User
  /users/sendotp:
    post:
      consumes:
      - application/json
      description: OTP login send otp
      parameters:
      - description: otp-data
        in: body
        name: otp
        required: true
        schema:
          $ref: '#/definitions/models.OTPData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send OTP
      tags:
      - User
  /users/signup:
    post:
      consumes:
      - application/json
      description: user can signup by giving their details
      parameters:
      - description: signup
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/models.UserDetails'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Signup
      tags:
      - User
  /users/verifyotp:
    post:
      consumes:
      - application/json
      description: OTP login verify otp
      parameters:
      - description: otp-verify
        in: body
        name: otp
        required: true
        schema:
          $ref: '#/definitions/models.VerifyData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify OTP
      tags:
      - User
swagger: "2.0"
